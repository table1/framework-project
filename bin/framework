#!/usr/bin/env bash
# Framework CLI - Project-Local Launcher
#
# This script is the project-local entry point for Framework commands.
# It's called by the global framework shim when you're inside a project directory.
#
# Safe to check into version control - provides project-specific context to Framework.

set -e

# Ensure we're in a Framework project
if [ ! -f "config.yml" ]; then
  echo "Error: Not in a Framework project directory (config.yml not found)"
  echo "Run 'framework new' to create a new project"
  exit 1
fi

# Detect color support
if [ -t 1 ] && command -v tput >/dev/null 2>&1 && [ "$(tput colors 2>/dev/null || echo 0)" -ge 8 ]; then
  BLUE='\033[0;34m'
  YELLOW='\033[1;33m'
  GREEN='\033[0;32m'
  NC='\033[0m'
else
  BLUE=''
  YELLOW=''
  GREEN=''
  NC=''
fi

COMMAND="${1:-help}"

case "$COMMAND" in
  scaffold)
    # Run scaffold() in the project context
    shift
    Rscript --quiet --no-save -e "library(framework); scaffold()"
    ;;

  make:notebook)
    # Create a new notebook (Laravel-style)
    shift
    NAME="${1}"

    if [ -z "$NAME" ]; then
      printf "${BLUE}Creating new notebook...${NC}\n"
      Rscript --quiet --no-save -e "library(framework); make_notebook()"
    else
      Rscript --quiet --no-save -e "library(framework); make_notebook('$NAME')"
    fi
    ;;

  make:script)
    # Create a new script (Laravel-style)
    shift
    NAME="${1}"

    if [ -z "$NAME" ]; then
      printf "${BLUE}Creating new script...${NC}\n"
      Rscript --quiet --no-save -e "library(framework); make_script()"
    else
      Rscript --quiet --no-save -e "library(framework); make_script('$NAME')"
    fi
    ;;

  help|--help|-h)
    printf "${BLUE}Framework CLI - Project Commands${NC}\n\n"
    printf "${YELLOW}Usage:${NC}\n"
    printf "  framework scaffold             Initialize project environment\n"
    printf "  framework make:notebook [name] Create new notebook\n"
    printf "  framework make:script [name]   Create new script\n"
    printf "  framework help                 Show this help\n\n"
    printf "${YELLOW}Examples:${NC}\n"
    printf "  framework scaffold             ${GREEN}# Load environment, install packages${NC}\n"
    printf "  framework make:notebook analysis ${GREEN}# Create notebooks/analysis.qmd${NC}\n"
    printf "  framework make:script process  ${GREEN}# Create scripts/process.R${NC}\n\n"
    printf "${YELLOW}Global Commands:${NC}\n"
    printf "  To use global commands (new, version, update), run from outside this project.\n\n"
    printf "${YELLOW}More Information:${NC}\n"
    printf "  Package: https://github.com/table1/framework\n"
    ;;

  *)
    # Unknown command - suggest they might want framework-global
    printf "${YELLOW}Unknown project command: ${NC}$COMMAND\n\n"
    printf "Project commands:\n"
    printf "  scaffold, make:notebook, make:script, help\n\n"
    printf "Did you mean a global command? Run from outside the project:\n"
    printf "  framework new, version, update\n"
    exit 1
    ;;
esac
